var mocha         = require('mocha')
  , chai          = require('chai')
  , expect        = chai.expect
  , tradehelpers  = require('../lib/tradehelpers');

var depth = JSON.parse('{"asks":[[0.01099,175.87966644],[0.01105,41.66252067],[0.01106,98.300598],[0.01107,3.84235035],[0.01108,90.31815],[0.01109,29.698733],[0.0111,39.32576],[0.01111,150],[0.01112,115.59744972],[0.01114,305.69285],[0.01115,300.60413444],[0.01116,29.21194259],[0.01117,1091.24147],[0.01118,4],[0.0112,817.92466106],[0.01122,3.390568],[0.01124,9.42984812],[0.01126,114.4843],[0.01127,30.10717977],[0.01128,216.93405978],[0.01129,33.57150219],[0.0113,185.86366627],[0.01131,11.18392707],[0.01132,78.1866518],[0.01133,5.59075009],[0.01135,72.06649778],[0.01136,9.97723079],[0.01137,103.23005818],[0.01138,2.34836552],[0.01139,5459.25811537],[0.0114,1030.46979068],[0.01141,0.50075361],[0.01142,1.17362631],[0.01143,264.53469914],[0.01145,309.36343441],[0.01146,602.84863183],[0.01147,4.40195672],[0.01148,55.82054279],[0.01149,29.70537425],[0.0115,351.9287927],[0.01151,7.74650018],[0.01152,11.35699709],[0.01153,748.43325009],[0.01154,5.452245],[0.01155,57.31659518],[0.01156,3.64325009],[0.01157,9.94899205],[0.01158,154.9329484],[0.01159,599.01737686],[0.0116,134.53572761],[0.01161,15.79506024],[0.01162,17.66301898],[0.01163,27.20708736],[0.01164,20.46414199],[0.01165,235.70376398],[0.01166,87.92493885],[0.01167,98],[0.01168,341.32601396],[0.01169,498.24208518],[0.0117,1454.49006117],[0.01171,23.63012722],[0.01172,372.06646601],[0.01173,24.50075361],[0.01174,12.85199085],[0.01175,288.42250112],[0.01176,11.04231978],[0.01177,33.19298328],[0.01178,0.1],[0.01179,540.96869809],[0.0118,2641.50917404],[0.01181,17.21374234],[0.01182,1.49215009],[0.01183,10.36770905],[0.01184,21.10650018],[0.01185,15.41922713],[0.01186,20.16],[0.01187,90.66393136],[0.01188,37.23769898],[0.01189,36.13670009],[0.0119,420.9987958],[0.01191,11.92159701],[0.01192,0.60325009],[0.01193,1.21987334],[0.01194,22.72309009],[0.01195,354.4304501],[0.01196,25.80417577],[0.01197,1.1],[0.01198,129.8140979],[0.01199,4922.556835],[0.012,4368.24134128],[0.01201,1104.00610534],[0.01202,1002.82058014],[0.01203,1000],[0.01204,1110.55957727],[0.01205,562.05403136],[0.01206,1000.86654038],[0.01207,1087.1],[0.01208,1066.14200448],[0.01209,1190.20607418],[0.0121,3945.25762338],[0.01211,5.00684883],[0.01213,104.14613533],[0.01214,1.84361184],[0.01215,2013.74799356],[0.01216,96.23000448],[0.01217,1.095496],[0.01218,262.54299166],[0.01219,35.8802],[0.0122,1058.83857672],[0.01222,7.35906634],[0.01224,0.55278124],[0.01225,529.80504147],[0.01226,41.53163964],[0.01227,116.01095],[0.01228,36.43325009],[0.01229,25.50325009],[0.0123,327.18917179],[0.01231,128.4468501],[0.01232,110.08405009],[0.01233,31.1396],[0.01234,100.1],[0.01235,9.62764025],[0.01236,3078.28429868],[0.01237,67.5646],[0.01238,8.982],[0.01239,31.95792499],[0.0124,3065.09612849],[0.01241,17.50794864],[0.01242,28.42969704],[0.01243,11.82529577],[0.01244,0.97276145],[0.01245,30.36028147],[0.01246,0.10536001],[0.01247,12.36426925],[0.01248,4166.72464177],[0.01249,127.83132014],[0.0125,7945.9477868],[0.01251,1.23084347],[0.01252,13.00283622],[0.01253,46.17646],[0.01254,14.28193245],[0.01255,4.82023147],[0.01256,2.26069577],[0.01257,101.94774091],[0.01258,12.2041087],[0.01259,555.04819292],[0.0126,1300.06975159],[0.01261,1.85841267],[0.01262,0.64041402],[0.01263,10.81725925]],"bids":[[0.01098,28.68866722],[0.01097,0.11161923],[0.01096,0.2],[0.01095,4.21022912],[0.01094,100.2],[0.01093,0.26],[0.01092,4.51472809],[0.01091,113.5086826],[0.0109,319.53072485],[0.01089,28.18783381],[0.01088,425.38285],[0.01087,168.76113356],[0.01086,940],[0.01085,556.40628147],[0.01084,589.93417702],[0.01083,417.62612309],[0.01082,743.35749251],[0.01081,602.97080298],[0.0108,2153.9167211],[0.01077,0.25],[0.01076,346.89472866],[0.01075,574],[0.01074,506.25173269],[0.01073,151.86158983],[0.01072,1994.04893433],[0.01071,2018.24557052],[0.0107,1306.6961],[0.01068,1291.9582929],[0.01067,112.4248],[0.01066,0.16546],[0.01065,282.72548564],[0.01064,51.19176776],[0.01063,8],[0.01062,452.22269576],[0.01061,273.302005],[0.0106,1615.02664895],[0.01059,1],[0.01056,500],[0.01055,59.93149],[0.01054,64],[0.01052,775.61874325],[0.01051,11131.96633482],[0.0105,3932.50523901],[0.01045,59.17452147],[0.01044,5],[0.01043,7.19079674],[0.01042,45],[0.01041,699.00802],[0.0104,360.72],[0.01039,20.7014035],[0.01036,20.93528],[0.01035,115],[0.01033,14.97478219],[0.01032,14],[0.01031,1.66395809],[0.0103,831.21],[0.01028,20],[0.01025,2055.20445147],[0.01022,78.33072495],[0.01021,5000],[0.0102,363.48335088],[0.01018,20],[0.01016,37.00763785],[0.01015,85],[0.01014,2200],[0.01013,5.11314896],[0.01012,50],[0.01011,70],[0.0101,2914.17],[0.01006,1],[0.01005,112.13221647],[0.01004,10],[0.01002,52.44081837],[0.01001,1510],[0.01,21538.1213887],[0.00999,100],[0.00998,32.9086],[0.0099,179.05],[0.00985,1.13301147],[0.00981,300],[0.0098,4900],[0.00975,76],[0.00968,0.5],[0.00965,1.05866147],[0.00962,50],[0.0096,31.002005],[0.00956,10],[0.00952,10],[0.00951,8.02894627],[0.0095,559.01010622],[0.00945,292.08556147],[0.00941,10],[0.0094,1.002005],[0.0093,62],[0.00925,1.08736147],[0.00921,500],[0.0092,221.16930099],[0.00917,15],[0.00912,60],[0.00911,0.100301],[0.0091,135.06],[0.00906,2600],[0.00905,252.08927147],[0.00902,10],[0.00901,1427.81441388],[0.009,1569.14158394],[0.00891,4.3],[0.0089,212.143],[0.00888,12],[0.00885,1.11972147],[0.00879,35],[0.00875,236],[0.00871,2850.57405281],[0.0087,1000.57471264],[0.00869,0.57537399],[0.00868,0.57603686],[0.00867,0.57670126],[0.00866,0.5773672],[0.00865,1.67135615],[0.00864,0.5787037],[0.00863,10.57937427],[0.00862,0.5800464],[0.00861,0.58072009],[0.0086,102.58139534],[0.00859,0.68237317],[0.00858,0.58275058],[0.00857,0.58343057],[0.00856,0.58411214],[0.00855,0.58479532],[0.00854,0.58548009],[0.00853,3050.58616647],[0.00852,10.58685446],[0.00851,0.58754406],[0.0085,443.00163284],[0.00849,0.58892815],[0.00848,0.58962264],[0.00847,0.59031877],[0.00846,0.59101654],[0.00845,2.65797744],[0.00844,0.59241706],[0.00843,20.59311981],[0.00842,0.59382422],[0.00838,50],[0.0083,200],[0.00829,1001],[0.00827,1],[0.00825,2.01010147],[0.00821,1],[0.0082,60],[0.00815,15]]}');

describe('when buying a volume', function() {
  it('it should find the price when its first', function() {
    var volume = 10
      , price = tradehelpers.priceToBuyVolume(depth, volume);
    expect(price).to.equal(0.01099);
  });
  it('it should find the price in the middle', function() {
    var volume = 415
      , price = tradehelpers.priceToBuyVolume(depth, volume);
    expect(price).to.equal(0.01109);
  });
  it('it should return null if the volume exceeds the depth data', function() {
    var volume = 100000000
     , price = tradehelpers.priceToBuyVolume(depth, volume);
    expect(price).to.be.null;
  });
});


describe('when selling a volume', function() {
  it('it should find the price when its first', function() {
    var volume = 10
      , price = tradehelpers.priceToSellVolume(depth, volume);
    expect(price).to.equal(0.01098);
  });
  it('it should find the price in the middle', function() {
    var volume = 200
      , price = tradehelpers.priceToSellVolume(depth, volume);
    expect(price).to.equal(0.01091);
  });
  it('it should return null if the volume exceeds the depth data', function() {
   var volume = 100000000
     , price = tradehelpers.priceToSellVolume(depth, volume);
    expect(price).to.be.null;
  });
});


describe('#canBuy', function() {
  it('it should find the price and amount when in the first depth', function() {
    var wallet = 0.1099
      , result = tradehelpers.canBuy(depth, wallet);
    expect(result.amount).to.equal(10);
    expect(result.price).to.equal(0.01099);
  });
  it('it should find the price and amount when in the depth', function() {
    var wallet = 5
      , result = tradehelpers.canBuy(depth, wallet);
    expect(result.amount).to.equal(452.93518325246845);
    expect(result.price).to.equal(0.0111);
  });
  it('it should return null when it exceeds the depth', function() {
    var wallet = 1000000
      , result = tradehelpers.canBuy(depth, wallet);
    expect(result).to.equal(null);   
  });
});
describe('#canSell', function() {
  it('it should find the price and amount when in the first depth', function() {
    var wallet = 0.1098
      , result = tradehelpers.canSell(depth, wallet);
    expect(result.amount).to.equal(10);
    expect(result.price).to.equal(0.01098)
  });
  it('it should find the price and amount when in the depth', function() {
    var wallet = 5
      , result = tradehelpers.canSell(depth, wallet);
    expect(result.amount).to.equal(458.0030642598624);
    expect(result.price).to.equal(0.0109);
  });
  it('it should return null', function() {
    var wallet = 1000000
      , result = tradehelpers.canSell(depth, wallet);
    expect(result).to.equal(null);   
  });
});
